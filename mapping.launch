<launch>
  <arg name="world_file"  default="$(find robotics-major-project)/devon_floor_1.world"/>

  <!-- Env variables -->
  <arg name="base"      value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
  <arg name="battery"   value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 -->
  <arg name="gui"       default="true"/>
  <arg name="stacks"    value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
  <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro -->

  <param name="imu0_relative" value="true"/>

  <!-- start up gazebo -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="world_name" value="$(arg world_file)"/>
  </include>

  <include file="$(find turtlebot_gazebo)/launch/includes/$(arg base).launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
    <!-- <arg name="urdf_file" value="$(find xacro)/xacro.py $(find robotics-major-project)/xacro/turtlebot_setup.xacro" /> -->
  </include>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

  <!-- Fake laser -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="/camera/depth/image_raw"/>
    <remap from="scan" to="/scan"/>
  </node>
  
  <!-- Project nodes -->
  <!-- <node pkg="robotics-major-project" type="navigation.py" name="navigation" output="screen" /> -->
  
  <!-- RGBD SLAM -->
  <!-- <include file="$(find robotics-major-project)/launch/rgbdslam.launch" /> -->
  
  <!-- Octomap -->
  <!-- <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
    <param name="resolution" value="0.05" /> 
    <param name="frame_id" type="string" value="map" />
    <param name="sensor_model/max_range" value="5.0" />
    <remap from="cloud_in" to="rgbdslam/online_clouds"/>
  </node> -->

</launch>
